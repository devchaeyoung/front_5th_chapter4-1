name: Light House CI
on:
  push:
    branches:
      - main
permissions:          # üëà Ï∂îÍ∞Ä
  contents: write     # README Ïª§Î∞ã¬∑Ìë∏ÏãúÏö©
  pull-requests: write  # (PR ÏûêÎèô ÏÉùÏÑ± ÌîåÎ°úÏö∞Í∞Ä ÌïÑÏöîÌï† Îïå)
    
jobs:
  lighthouse:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci

      - name: Generate lighthouserc.json
        run: |
          cat > lighthouserc.json <<'EOF'
          {
            "ci": {
              "collect": {
                "url": [
                  "http://hanghae-front-5th-chaeyoung.s3-website.ap-northeast-2.amazonaws.com/",
                  "https://dlxgp5it7mnux.cloudfront.net/",
                  "https://devforworld.com/"
                ]
              },
              "assert": {
                "assertions": {
                  "categories:performance": ["warn", {"minScore": 0.8}],
                  "categories:accessibility": ["warn", {"minScore": 0.9}],
                  "is-crawlable": "off",
                  "unused-javascript": ["warn", {"maxLength": 2}]
                }
              },
              "upload": {
                "target": "temporary-public-storage"
              }
            }
          }
          EOF

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq bc # bcÎäî BashÏóêÏÑú Î∂ÄÎèôÏÜåÏàò Í≥ÑÏÇ∞Ìï† Îïå ÏÇ¨Ïö©

      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v12
        with:
          configPath: ./lighthouserc.json
          uploadArtifacts: false
          temporaryPublicStorage: true
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Build Lighthouse summary table
        id: make_table
        run: |
              set -euo pipefail

              S3_FILE=$(ls -t .lighthouseci/*hanghae_front_5th_chaeyoung* 2>/dev/null | head -1 || true)
              CF_FILE=$(ls -t .lighthouseci/*cloudfront_net*              2>/dev/null | head -1 || true)
              R53_FILE=$(ls -t .lighthouseci/*devforworld_com*            2>/dev/null | head -1 || true)

              if [[ -z "$S3_FILE$CF_FILE$R53_FILE" ]]; then
                echo "noReport=true" >> "$GITHUB_OUTPUT"
                exit 0
              fi

              get() { jq -r "$2 // 0 * 100" "$1"; }
              for F in S3_FILE CF_FILE R53_FILE; do
                FILE=${!F}
                if [[ -n "$FILE" ]]; then
                  eval "$(cat <<EOF
              ${F%_FILE}_PERF=\$(get "$FILE" '.categories.performance.score')
              ${F%_FILE}_ACC=\$(get "$FILE" '.categories.accessibility.score')
              ${F%_FILE}_SEO=\$(get "$FILE" '.categories.seo.score')
              EOF
              )"
                    fi
                  done

              DATE=$(TZ=Asia/Seoul date '+%Y-%m-%d %H:%M')

              cat > lhci-summary.md <<EOF
              _(ÏóÖÎç∞Ïù¥Ìä∏: $DATE KST)_

              | Ìï≠Î™© | S3 | CloudFront | Route 53 |
              |------|---:|-----------:|---------:|
              | Performance | \${S3_PERF:-N/A} | \${CF_PERF:-N/A} | \${R53_PERF:-N/A} |
              | Accessibility | \${S3_ACC:-N/A} | \${CF_ACC:-N/A} | \${R53_ACC:-N/A} |
              | SEO | \${S3_SEO:-N/A} | \${CF_SEO:-N/A} | \${R53_SEO:-N/A} |
              EOF

      # ‚ë° README Ï§ëÍ∞ÑÏóê Ìëú ÏÇΩÏûÖ(Ï£ºÏÑù ÏÇ¨Ïù¥Îßå ÍµêÏ≤¥)
      - name: Inject summary into README.md
        if: steps.make_table.outputs.noReport != 'true'
        run: |
          awk -f - README.md <<'AWK' > README.tmp
          BEGIN{skip=0}
          /<!-- LHCI-TABLE-START -->/ {print; system("cat lhci-summary.md"); skip=1; next}
          /<!-- LHCI-TABLE-END -->/   {print; skip=0; next}
          !skip
          AWK
          mv README.tmp README.md

      - name: Cleanup .Lighthouseci
        run: |
          rm -rf .lighthouseci

      - name: Show git changes
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          echo "=== git status ==="
          git status -s
          echo "=== diff stat ==="
          git diff --stat || true

      # ‚ë¢ Î≥ÄÍ≤ΩÏÇ¨Ìï≠ ÏûêÎèô Ïª§Î∞ã¬∑Ìë∏Ïãú
      - name: Commit & push if README changed
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "docs: ÏóÖÎç∞Ïù¥Ìä∏ Lighthouse Î¶¨Ìè¨Ìä∏"
          branch: main
          file_pattern: README.md