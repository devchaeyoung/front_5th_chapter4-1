name: Light House CI
on:
  push:
    branches:
      - main
permissions:          # 👈 추가
  contents: write     # README 커밋·푸시용
  pull-requests: write  # (PR 자동 생성 플로우가 필요할 때)
    
jobs:
  lighthouse:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci

      - name: Generate lighthouserc.json
        run: |
          cat > lighthouserc.json <<'EOF'
          {
            "ci": {
              "collect": {
                "url": [
                  "http://hanghae-front-5th-chaeyoung.s3-website.ap-northeast-2.amazonaws.com/",
                  "https://dlxgp5it7mnux.cloudfront.net/",
                  "https://devforworld.com/"
                ]
              },
              "assert": {
                "assertions": {
                  "categories:performance": ["warn", {"minScore": 0.8}],
                  "categories:accessibility": ["warn", {"minScore": 0.9}],
                  "is-crawlable": "off",
                  "unused-javascript": ["warn", {"maxLength": 2}]
                }
              },
              "upload": {
                "target": "temporary-public-storage"
              }
            }
          }
          EOF

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq bc # bc는 Bash에서 부동소수 계산할 때 사용

      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v12
        with:
          configPath: ./lighthouserc.json
          uploadArtifacts: false
          temporaryPublicStorage: true
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Build Lighthouse compare table
        id: make_table
        run: |
          set -euo pipefail
          DATE=$(TZ=Asia/Seoul date '+%Y-%m-%d %H:%M')
          
          declare -A LABELS=(
            ["hanghae-front-5th-chaeyoung_s3_website"]="S3"
            ["d3jxcj7xvwc1i5_cloudfront_net"]="CloudFront"
            ["devforworld_com"]="Route53"
          )
          
          val() { jq -r "$2" "$1" 2>/dev/null || echo "N/A"; }
          
          HEADER="| Metric |"
          for slug in "${!LABELS[@]}"; do HEADER+=" ${LABELS[$slug]} |"; done
          SEP=$(printf -- '------|%.0s' "${!LABELS[@]}")
          HEADER+="\n|--------|${SEP}\n"
          
          make_row() {
            local title=$1 path=$2 fmt=$3
            local row="| $title |"
            for slug in "${!LABELS[@]}"; do
              local file=$(ls -t .lighthouseci/${slug}*.report.json 2>/dev/null | head -1 || true)
              if [[ -z $file ]]; then row+=" - |"; continue; fi
              local raw=$(val "$file" "$path")
              [[ $raw == "null" || -z $raw ]] && raw="N/A"
              if [[ $raw =~ ^[0-9.]+$ ]]; then
                printf -v cell "$fmt" "$raw"
              else
                cell="$raw"
              fi
              row+=" $cell |"
            done
            echo "$row"
          }
          
          {
            echo "## 🚦 Lighthouse 비교 (업데이트: $DATE KST)"
            echo
            printf "%b" "$HEADER"
            make_row "Performance"      '.categories.performance.score*100'         '%.0f'
            make_row "Accessibility"    '.categories.accessibility.score*100'       '%.0f'
            make_row "SEO"              '.categories.seo.score*100'                 '%.0f'
            make_row "LCP (ms)"         '.audits."largest-contentful-paint".numericValue' '%.0f'
            make_row "TTFB (ms)"        '.audits."server-response-time".numericValue'      '%.0f'
          } > lhci-summary.md
          
          echo "noReport=false" >> "$GITHUB_OUTPUT"

      # ② README 중간에 표 삽입(주석 사이만 교체)
      - name: Inject summary into README.md
        if: steps.make_table.outputs.noReport != 'true'
        run: |
          awk -f - README.md <<'AWK' > README.tmp
          BEGIN{skip=0}
          /<!-- LHCI-TABLE-START -->/ {print; system("cat lhci-summary.md"); skip=1; next}
          /<!-- LHCI-TABLE-END -->/   {print; skip=0; next}
          !skip
          AWK
          mv README.tmp README.md

      - name: Cleanup .Lighthouseci
        run: |
          rm -rf .lighthouseci

      - name: Show git changes
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          echo "=== git status ==="
          git status -s
          echo "=== diff stat ==="
          git diff --stat || true

      # ③ 변경사항 자동 커밋·푸시
      - name: Commit & push if README changed
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "docs: 업데이트 Lighthouse 리포트"
          branch: main
          file_pattern: README.md